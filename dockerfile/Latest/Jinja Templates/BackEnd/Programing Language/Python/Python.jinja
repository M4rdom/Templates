# Python Aplication Dockerfile
{% if Flask %}
# Fask Aplication Dockerfile
{% endif %}
{% if Django %}
# Django Aplication Dockerfile
{% endif %}





{%- if Python_Version_Tag %}

FROM python:{{Python_Version_Tag}}

{% elif Python_Version_Digest %}

FROM python@{{Python_Version_Digest}}

{% else %}

# Avoid using latest tag in production
FROM python:latest

{% endif -%}


# Keeps Python from buffering stdout and stderr to avoid situations where
# the application crashes without emitting any logs due to buffering.
ENV PYTHONUNBUFFERED=1

# Create a non-privileged user that the app will run under.
# See https://docs.docker.com/go/dockerfile-user-best-practices/
ARG UID=10001
RUN adduser \
    --disabled-password \
    --gecos "" \
    --home "/nonexistent" \
    --shell "/sbin/nologin" \
    --no-create-home \
    --uid "${UID}" \
    appuser


WORKDIR /app

COPY . /app


{%- if Install_Python_Requirements %}

# Install the application dependencies
RUN --mount=type=cache,target=/root/.cache/pip \
    python -m pip install --no-cache-dir -r requirements.txt

{% endif -%}






{%- if WSGI %}
{% include 'BackEnd/Programing Language/Python/WSGI/WSGI.jinja'%}
{% endif %}






{%- if Custom_Exposed_Port %}

EXPOSE {{Port}}
{% else %}
{% if Flask %}

# Make port 5000 available to the world outside this container
EXPOSE 5000
{% endif %}
{% if Django %}

# Make port 8000 available to the world outside this container
EXPOSE 8000
{% endif %}
{% endif -%}